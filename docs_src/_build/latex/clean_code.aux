\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\providecommand \oddpage@label [2]{}
\babel@aux{english}{}
\newlabel{index::doc}{{}{1}{}{section*.2}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Docstrings and annotations}{1}{chapter.1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapters/1_docstrings_and_annotations/index:docstrings-and-annotations}{{1}{1}{Docstrings and annotations}{chapter.1}{}}
\newlabel{chapters/1_docstrings_and_annotations/index::doc}{{1}{1}{Docstrings and annotations}{chapter.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}1. Docstrings}{1}{section.1.1}}
\newlabel{chapters/1_docstrings_and_annotations/index:docstrings}{{1.1}{1}{1. Docstrings}{section.1.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}2. Annotations}{1}{section.1.2}}
\newlabel{chapters/1_docstrings_and_annotations/index:annotations}{{1.2}{1}{2. Annotations}{section.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.1}2.1. Do annotations replace docstrings?}{2}{subsection.1.2.1}}
\newlabel{chapters/1_docstrings_and_annotations/index:do-annotations-replace-docstrings}{{1.2.1}{2}{2.1. Do annotations replace docstrings?}{subsection.1.2.1}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Pythonic code}{5}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapters/2_pythonic_code/index:pythonic-code}{{2}{5}{Pythonic code}{chapter.2}{}}
\newlabel{chapters/2_pythonic_code/index::doc}{{2}{5}{Pythonic code}{chapter.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}1. Indexes and slices}{5}{section.2.1}}
\newlabel{chapters/2_pythonic_code/index:indexes-and-slices}{{2.1}{5}{1. Indexes and slices}{section.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}1.1. Creating your own sequences}{6}{subsection.2.1.1}}
\newlabel{chapters/2_pythonic_code/index:creating-your-own-sequences}{{2.1.1}{6}{1.1. Creating your own sequences}{subsection.2.1.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}2. Context managers}{6}{section.2.2}}
\newlabel{chapters/2_pythonic_code/index:context-managers}{{2.2}{6}{2. Context managers}{section.2.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}2.1. Implementing context managers}{8}{subsection.2.2.1}}
\newlabel{chapters/2_pythonic_code/index:implementing-context-managers}{{2.2.1}{8}{2.1. Implementing context managers}{subsection.2.2.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}3. Properties, attributes and different types of methods for objects}{9}{section.2.3}}
\newlabel{chapters/2_pythonic_code/index:properties-attributes-and-different-types-of-methods-for-objects}{{2.3}{9}{3. Properties, attributes and different types of methods for objects}{section.2.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.1}3.1. Underscores in Python}{9}{subsection.2.3.1}}
\newlabel{chapters/2_pythonic_code/index:underscores-in-python}{{2.3.1}{9}{3.1. Underscores in Python}{subsection.2.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.2}3.2 Properties}{10}{subsection.2.3.2}}
\newlabel{chapters/2_pythonic_code/index:properties}{{2.3.2}{10}{3.2 Properties}{subsection.2.3.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.4}4. Iterable objects}{12}{section.2.4}}
\newlabel{chapters/2_pythonic_code/index:iterable-objects}{{2.4}{12}{4. Iterable objects}{section.2.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.1}4.1. Creating iterable objects}{12}{subsection.2.4.1}}
\newlabel{chapters/2_pythonic_code/index:creating-iterable-objects}{{2.4.1}{12}{4.1. Creating iterable objects}{subsection.2.4.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4.2}4.2. Creating sequences}{14}{subsection.2.4.2}}
\newlabel{chapters/2_pythonic_code/index:creating-sequences}{{2.4.2}{14}{4.2. Creating sequences}{subsection.2.4.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.5}5. Container objects}{15}{section.2.5}}
\newlabel{chapters/2_pythonic_code/index:container-objects}{{2.5}{15}{5. Container objects}{section.2.5}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.6}6. Dynamic attributes for objects}{16}{section.2.6}}
\newlabel{chapters/2_pythonic_code/index:dynamic-attributes-for-objects}{{2.6}{16}{6. Dynamic attributes for objects}{section.2.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.7}7. Callable objects}{16}{section.2.7}}
\newlabel{chapters/2_pythonic_code/index:callable-objects}{{2.7}{16}{7. Callable objects}{section.2.7}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.8}8. Caveats in Python}{17}{section.2.8}}
\newlabel{chapters/2_pythonic_code/index:caveats-in-python}{{2.8}{17}{8. Caveats in Python}{section.2.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.8.1}8.1. Mutable default arguments}{17}{subsection.2.8.1}}
\newlabel{chapters/2_pythonic_code/index:mutable-default-arguments}{{2.8.1}{17}{8.1. Mutable default arguments}{subsection.2.8.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.8.2}8.2. Extending built\sphinxhyphen {}in types}{18}{subsection.2.8.2}}
\newlabel{chapters/2_pythonic_code/index:extending-built-in-types}{{2.8.2}{18}{8.2. Extending built\sphinxhyphen {}in types}{subsection.2.8.2}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}General traits of good code}{21}{chapter.3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapters/3_general_traits/index:general-traits-of-good-code}{{3}{21}{General traits of good code}{chapter.3}{}}
\newlabel{chapters/3_general_traits/index::doc}{{3}{21}{General traits of good code}{chapter.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}1. Design by contract}{21}{section.3.1}}
\newlabel{chapters/3_general_traits/index:design-by-contract}{{3.1}{21}{1. Design by contract}{section.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.1}1.1. Preconditions}{22}{subsection.3.1.1}}
\newlabel{chapters/3_general_traits/index:preconditions}{{3.1.1}{22}{1.1. Preconditions}{subsection.3.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.2}1.2. Postconditions}{22}{subsection.3.1.2}}
\newlabel{chapters/3_general_traits/index:postconditions}{{3.1.2}{22}{1.2. Postconditions}{subsection.3.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.3}1.3. Pythonic contracts}{23}{subsection.3.1.3}}
\newlabel{chapters/3_general_traits/index:pythonic-contracts}{{3.1.3}{23}{1.3. Pythonic contracts}{subsection.3.1.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.4}1.4. Conclusions}{23}{subsection.3.1.4}}
\newlabel{chapters/3_general_traits/index:conclusions}{{3.1.4}{23}{1.4. Conclusions}{subsection.3.1.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.2}2. Defensive programming}{23}{section.3.2}}
\newlabel{chapters/3_general_traits/index:defensive-programming}{{3.2}{23}{2. Defensive programming}{section.3.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.1}2.1. Error handling}{24}{subsection.3.2.1}}
\newlabel{chapters/3_general_traits/index:error-handling}{{3.2.1}{24}{2.1. Error handling}{subsection.3.2.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{2.1.1. Value substitution}{24}{subsubsection*.3}}
\newlabel{chapters/3_general_traits/index:value-substitution}{{3.2.1}{24}{2.1.1. Value substitution}{subsubsection*.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{2.1.2. Exception handling}{25}{subsubsection*.4}}
\newlabel{chapters/3_general_traits/index:exception-handling}{{3.2.1}{25}{2.1.2. Exception handling}{subsubsection*.4}{}}
\@writefile{toc}{\contentsline {paragraph}{2.1.2.1. Handle exceptions at the right level of abstraction}{25}{paragraph*.5}}
\newlabel{chapters/3_general_traits/index:handle-exceptions-at-the-right-level-of-abstraction}{{3.2.1}{25}{2.1.2.1. Handle exceptions at the right level of abstraction}{paragraph*.5}{}}
\@writefile{toc}{\contentsline {paragraph}{2.1.2.2 Do not expose tracebacks}{27}{paragraph*.6}}
\newlabel{chapters/3_general_traits/index:do-not-expose-tracebacks}{{3.2.1}{27}{2.1.2.2 Do not expose tracebacks}{paragraph*.6}{}}
\@writefile{toc}{\contentsline {paragraph}{2.1.2.3 Avoid empty except blocks}{27}{paragraph*.7}}
\newlabel{chapters/3_general_traits/index:avoid-empty-except-blocks}{{3.2.1}{27}{2.1.2.3 Avoid empty except blocks}{paragraph*.7}{}}
\@writefile{toc}{\contentsline {paragraph}{2.1.2.4. Include the original exception}{28}{paragraph*.8}}
\newlabel{chapters/3_general_traits/index:include-the-original-exception}{{3.2.1}{28}{2.1.2.4. Include the original exception}{paragraph*.8}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.2}2.2. Using assertions in Python}{29}{subsection.3.2.2}}
\newlabel{chapters/3_general_traits/index:using-assertions-in-python}{{3.2.2}{29}{2.2. Using assertions in Python}{subsection.3.2.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.3}3. Separation of concerns}{29}{section.3.3}}
\newlabel{chapters/3_general_traits/index:separation-of-concerns}{{3.3}{29}{3. Separation of concerns}{section.3.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.1}3.1. Cohesion and coupling}{30}{subsection.3.3.1}}
\newlabel{chapters/3_general_traits/index:cohesion-and-coupling}{{3.3.1}{30}{3.1. Cohesion and coupling}{subsection.3.3.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.4}4. Acronyms to live by}{30}{section.3.4}}
\newlabel{chapters/3_general_traits/index:acronyms-to-live-by}{{3.4}{30}{4. Acronyms to live by}{section.3.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.1}4.1. DRY/OAOO}{30}{subsection.3.4.1}}
\newlabel{chapters/3_general_traits/index:dry-oaoo}{{3.4.1}{30}{4.1. DRY/OAOO}{subsection.3.4.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.2}4.2. YAGNI}{32}{subsection.3.4.2}}
\newlabel{chapters/3_general_traits/index:yagni}{{3.4.2}{32}{4.2. YAGNI}{subsection.3.4.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.3}4.3. KIS}{32}{subsection.3.4.3}}
\newlabel{chapters/3_general_traits/index:kis}{{3.4.3}{32}{4.3. KIS}{subsection.3.4.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.4}4.4. EAFP/LBYL}{33}{subsection.3.4.4}}
\newlabel{chapters/3_general_traits/index:eafp-lbyl}{{3.4.4}{33}{4.4. EAFP/LBYL}{subsection.3.4.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.5}5. Composition and inheritance}{34}{section.3.5}}
\newlabel{chapters/3_general_traits/index:composition-and-inheritance}{{3.5}{34}{5. Composition and inheritance}{section.3.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.1}5.1. When inheritance is a good decision}{34}{subsection.3.5.1}}
\newlabel{chapters/3_general_traits/index:when-inheritance-is-a-good-decision}{{3.5.1}{34}{5.1. When inheritance is a good decision}{subsection.3.5.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.2}5.2. Anti\sphinxhyphen {}patterns for inheritance}{34}{subsection.3.5.2}}
\newlabel{chapters/3_general_traits/index:anti-patterns-for-inheritance}{{3.5.2}{34}{5.2. Anti\sphinxhyphen {}patterns for inheritance}{subsection.3.5.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5.3}5.3. Multiple inheritance in Python}{36}{subsection.3.5.3}}
\newlabel{chapters/3_general_traits/index:multiple-inheritance-in-python}{{3.5.3}{36}{5.3. Multiple inheritance in Python}{subsection.3.5.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{5.3.1. Method Resolution Order (MRO)}{37}{subsubsection*.9}}
\newlabel{chapters/3_general_traits/index:method-resolution-order-mro}{{3.5.3}{37}{5.3.1. Method Resolution Order (MRO)}{subsubsection*.9}{}}
\@writefile{toc}{\contentsline {subsubsection}{5.3.2. Mixins}{38}{subsubsection*.10}}
\newlabel{chapters/3_general_traits/index:mixins}{{3.5.3}{38}{5.3.2. Mixins}{subsubsection*.10}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.6}6. Arguments in functions and methods}{39}{section.3.6}}
\newlabel{chapters/3_general_traits/index:arguments-in-functions-and-methods}{{3.6}{39}{6. Arguments in functions and methods}{section.3.6}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6.1}6.1. How function arguments work in Python}{39}{subsection.3.6.1}}
\newlabel{chapters/3_general_traits/index:how-function-arguments-work-in-python}{{3.6.1}{39}{6.1. How function arguments work in Python}{subsection.3.6.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{6.1.1. How arguments are copied to functions}{39}{subsubsection*.11}}
\newlabel{chapters/3_general_traits/index:how-arguments-are-copied-to-functions}{{3.6.1}{39}{6.1.1. How arguments are copied to functions}{subsubsection*.11}{}}
\@writefile{toc}{\contentsline {subsubsection}{6.1.2. Variable number of arguments}{40}{subsubsection*.12}}
\newlabel{chapters/3_general_traits/index:variable-number-of-arguments}{{3.6.1}{40}{6.1.2. Variable number of arguments}{subsubsection*.12}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6.2}6.2. The number of arguments in functions}{42}{subsection.3.6.2}}
\newlabel{chapters/3_general_traits/index:the-number-of-arguments-in-functions}{{3.6.2}{42}{6.2. The number of arguments in functions}{subsection.3.6.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{6.2.1. Function arguments and coupling}{42}{subsubsection*.13}}
\newlabel{chapters/3_general_traits/index:function-arguments-and-coupling}{{3.6.2}{42}{6.2.1. Function arguments and coupling}{subsubsection*.13}{}}
\@writefile{toc}{\contentsline {subsubsection}{6.2.2. Compact function signatures that take too many arguments}{43}{subsubsection*.14}}
\newlabel{chapters/3_general_traits/index:compact-function-signatures-that-take-too-many-arguments}{{3.6.2}{43}{6.2.2. Compact function signatures that take too many arguments}{subsubsection*.14}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.7}7. Final remarks on good practices for software design}{44}{section.3.7}}
\newlabel{chapters/3_general_traits/index:final-remarks-on-good-practices-for-software-design}{{3.7}{44}{7. Final remarks on good practices for software design}{section.3.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.7.1}7.1. Orthogonality in software}{44}{subsection.3.7.1}}
\newlabel{chapters/3_general_traits/index:orthogonality-in-software}{{3.7.1}{44}{7.1. Orthogonality in software}{subsection.3.7.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.7.2}7.2. Structuring the code}{45}{subsection.3.7.2}}
\newlabel{chapters/3_general_traits/index:structuring-the-code}{{3.7.2}{45}{7.2. Structuring the code}{subsection.3.7.2}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}The SOLID principles}{47}{chapter.4}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapters/4_solid_principles/index:the-solid-principles}{{4}{47}{The SOLID principles}{chapter.4}{}}
\newlabel{chapters/4_solid_principles/index::doc}{{4}{47}{The SOLID principles}{chapter.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}1. Single responsibility principle}{47}{section.4.1}}
\newlabel{chapters/4_solid_principles/index:single-responsibility-principle}{{4.1}{47}{1. Single responsibility principle}{section.4.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.1}1.1. A class with too many responsibilities}{48}{subsection.4.1.1}}
\newlabel{chapters/4_solid_principles/index:a-class-with-too-many-responsibilities}{{4.1.1}{48}{1.1. A class with too many responsibilities}{subsection.4.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.2}1.2. Distributing responsibilities}{49}{subsection.4.1.2}}
\newlabel{chapters/4_solid_principles/index:distributing-responsibilities}{{4.1.2}{49}{1.2. Distributing responsibilities}{subsection.4.1.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.2}2. The open/closed principle}{50}{section.4.2}}
\newlabel{chapters/4_solid_principles/index:the-open-closed-principle}{{4.2}{50}{2. The open/closed principle}{section.4.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.1}2.1. Example of maintainability perils for not following the open/closed principle}{50}{subsection.4.2.1}}
\newlabel{chapters/4_solid_principles/index:example-of-maintainability-perils-for-not-following-the-open-closed-principle}{{4.2.1}{50}{2.1. Example of maintainability perils for not following the open/closed principle}{subsection.4.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.2}2.2. Refactoring the events system for extensibility}{51}{subsection.4.2.2}}
\newlabel{chapters/4_solid_principles/index:refactoring-the-events-system-for-extensibility}{{4.2.2}{51}{2.2. Refactoring the events system for extensibility}{subsection.4.2.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.3}2.3. Extending the events system}{53}{subsection.4.2.3}}
\newlabel{chapters/4_solid_principles/index:extending-the-events-system}{{4.2.3}{53}{2.3. Extending the events system}{subsection.4.2.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.4}2.4. Final thoughts about the OCP}{54}{subsection.4.2.4}}
\newlabel{chapters/4_solid_principles/index:final-thoughts-about-the-ocp}{{4.2.4}{54}{2.4. Final thoughts about the OCP}{subsection.4.2.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.3}3. Liskov\IeC {\textquoteright }s substitution principle}{54}{section.4.3}}
\newlabel{chapters/4_solid_principles/index:liskov-s-substitution-principle}{{4.3}{54}{3. Liskov’s substitution principle}{section.4.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.1}3.1. Detecting incorrect datatypes in method signatures}{55}{subsection.4.3.1}}
\newlabel{chapters/4_solid_principles/index:detecting-incorrect-datatypes-in-method-signatures}{{4.3.1}{55}{3.1. Detecting incorrect datatypes in method signatures}{subsection.4.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.2}3.2. More subtle cases of LSP violations}{56}{subsection.4.3.2}}
\newlabel{chapters/4_solid_principles/index:more-subtle-cases-of-lsp-violations}{{4.3.2}{56}{3.2. More subtle cases of LSP violations}{subsection.4.3.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.3}3.3. Remarks on the LSP}{58}{subsection.4.3.3}}
\newlabel{chapters/4_solid_principles/index:remarks-on-the-lsp}{{4.3.3}{58}{3.3. Remarks on the LSP}{subsection.4.3.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.4}4. Interface segregation}{58}{section.4.4}}
\newlabel{chapters/4_solid_principles/index:interface-segregation}{{4.4}{58}{4. Interface segregation}{section.4.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.1}4.1. An interface that provides too much}{59}{subsection.4.4.1}}
\newlabel{chapters/4_solid_principles/index:an-interface-that-provides-too-much}{{4.4.1}{59}{4.1. An interface that provides too much}{subsection.4.4.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.2}4.2. The smaller the interface, the better}{59}{subsection.4.4.2}}
\newlabel{chapters/4_solid_principles/index:the-smaller-the-interface-the-better}{{4.4.2}{59}{4.2. The smaller the interface, the better}{subsection.4.4.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.3}4.3. How small should an interface be?}{60}{subsection.4.4.3}}
\newlabel{chapters/4_solid_principles/index:how-small-should-an-interface-be}{{4.4.3}{60}{4.3. How small should an interface be?}{subsection.4.4.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.5}5. Dependency inversion}{60}{section.4.5}}
\newlabel{chapters/4_solid_principles/index:dependency-inversion}{{4.5}{60}{5. Dependency inversion}{section.4.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5.1}5.1. A case of rigid dependencies}{60}{subsection.4.5.1}}
\newlabel{chapters/4_solid_principles/index:a-case-of-rigid-dependencies}{{4.5.1}{60}{5.1. A case of rigid dependencies}{subsection.4.5.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5.2}5.2. Inverting the dependencies}{61}{subsection.4.5.2}}
\newlabel{chapters/4_solid_principles/index:inverting-the-dependencies}{{4.5.2}{61}{5.2. Inverting the dependencies}{subsection.4.5.2}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {5}Using decorators to improve our code}{63}{chapter.5}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapters/5_decorators/index:using-decorators-to-improve-our-code}{{5}{63}{Using decorators to improve our code}{chapter.5}{}}
\newlabel{chapters/5_decorators/index::doc}{{5}{63}{Using decorators to improve our code}{chapter.5}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.1}1. What are decorators?}{63}{section.5.1}}
\newlabel{chapters/5_decorators/index:what-are-decorators}{{5.1}{63}{1. What are decorators?}{section.5.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.1}1.1. What are decorators in Python?}{63}{subsection.5.1.1}}
\newlabel{chapters/5_decorators/index:what-are-decorators-in-python}{{5.1.1}{63}{1.1. What are decorators in Python?}{subsection.5.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.2}1.2. Decorate functions}{64}{subsection.5.1.2}}
\newlabel{chapters/5_decorators/index:decorate-functions}{{5.1.2}{64}{1.2. Decorate functions}{subsection.5.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.3}1.2. Decorate classes}{64}{subsection.5.1.3}}
\newlabel{chapters/5_decorators/index:decorate-classes}{{5.1.3}{64}{1.2. Decorate classes}{subsection.5.1.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.4}1.3. Other types of decorator}{67}{subsection.5.1.4}}
\newlabel{chapters/5_decorators/index:other-types-of-decorator}{{5.1.4}{67}{1.3. Other types of decorator}{subsection.5.1.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.5}1.4. Passing arguments to decorators}{67}{subsection.5.1.5}}
\newlabel{chapters/5_decorators/index:passing-arguments-to-decorators}{{5.1.5}{67}{1.4. Passing arguments to decorators}{subsection.5.1.5}{}}
\@writefile{toc}{\contentsline {subsubsection}{1.4.1. Decorators with nested functions}{68}{subsubsection*.15}}
\newlabel{chapters/5_decorators/index:decorators-with-nested-functions}{{5.1.5}{68}{1.4.1. Decorators with nested functions}{subsubsection*.15}{}}
\@writefile{toc}{\contentsline {subsubsection}{1.4.2. Decorator objects}{69}{subsubsection*.16}}
\newlabel{chapters/5_decorators/index:decorator-objects}{{5.1.5}{69}{1.4.2. Decorator objects}{subsubsection*.16}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.6}1.5. Good uses for decorators}{70}{subsection.5.1.6}}
\newlabel{chapters/5_decorators/index:good-uses-for-decorators}{{5.1.6}{70}{1.5. Good uses for decorators}{subsection.5.1.6}{}}
\@writefile{toc}{\contentsline {subsubsection}{1.5.1. Transforming parameters}{70}{subsubsection*.17}}
\newlabel{chapters/5_decorators/index:transforming-parameters}{{5.1.6}{70}{1.5.1. Transforming parameters}{subsubsection*.17}{}}
\@writefile{toc}{\contentsline {subsubsection}{1.5.2. Tracing code}{70}{subsubsection*.18}}
\newlabel{chapters/5_decorators/index:tracing-code}{{5.1.6}{70}{1.5.2. Tracing code}{subsubsection*.18}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.2}2. Effective decorators: avoid common mistakes}{70}{section.5.2}}
\newlabel{chapters/5_decorators/index:effective-decorators-avoid-common-mistakes}{{5.2}{70}{2. Effective decorators: avoid common mistakes}{section.5.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.1}2.1. Preserving data about the original wrapped object}{70}{subsection.5.2.1}}
\newlabel{chapters/5_decorators/index:preserving-data-about-the-original-wrapped-object}{{5.2.1}{70}{2.1. Preserving data about the original wrapped object}{subsection.5.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.2}2.2. Dealing with side\sphinxhyphen {}effects in decorators}{72}{subsection.5.2.2}}
\newlabel{chapters/5_decorators/index:dealing-with-side-effects-in-decorators}{{5.2.2}{72}{2.2. Dealing with side\sphinxhyphen {}effects in decorators}{subsection.5.2.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{2.2.1. Incorrect handling of side\sphinxhyphen {}effects in a decorator}{72}{subsubsection*.19}}
\newlabel{chapters/5_decorators/index:incorrect-handling-of-side-effects-in-a-decorator}{{5.2.2}{72}{2.2.1. Incorrect handling of side\sphinxhyphen {}effects in a decorator}{subsubsection*.19}{}}
\@writefile{toc}{\contentsline {subsubsection}{2.2.2. Requiring decorators with side\sphinxhyphen {}effects}{74}{subsubsection*.20}}
\newlabel{chapters/5_decorators/index:requiring-decorators-with-side-effects}{{5.2.2}{74}{2.2.2. Requiring decorators with side\sphinxhyphen {}effects}{subsubsection*.20}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.3}2.3. Creating decorators that will always work}{75}{subsection.5.2.3}}
\newlabel{chapters/5_decorators/index:creating-decorators-that-will-always-work}{{5.2.3}{75}{2.3. Creating decorators that will always work}{subsection.5.2.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.3}3. The DRY principle with decorators}{77}{section.5.3}}
\newlabel{chapters/5_decorators/index:the-dry-principle-with-decorators}{{5.3}{77}{3. The DRY principle with decorators}{section.5.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.4}4. Decorators and separation of concerns}{77}{section.5.4}}
\newlabel{chapters/5_decorators/index:decorators-and-separation-of-concerns}{{5.4}{77}{4. Decorators and separation of concerns}{section.5.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {5.5}5. Analyzing good decorators}{78}{section.5.5}}
\newlabel{chapters/5_decorators/index:analyzing-good-decorators}{{5.5}{78}{5. Analyzing good decorators}{section.5.5}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {6}Getting more out of our objects with descriptors}{81}{chapter.6}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapters/6_descriptors/index:getting-more-out-of-our-objects-with-descriptors}{{6}{81}{Getting more out of our objects with descriptors}{chapter.6}{}}
\newlabel{chapters/6_descriptors/index::doc}{{6}{81}{Getting more out of our objects with descriptors}{chapter.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6.1}1. A first look at descriptors}{81}{section.6.1}}
\newlabel{chapters/6_descriptors/index:a-first-look-at-descriptors}{{6.1}{81}{1. A first look at descriptors}{section.6.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.1}1.1. The machinery behind descriptors}{81}{subsection.6.1.1}}
\newlabel{chapters/6_descriptors/index:the-machinery-behind-descriptors}{{6.1.1}{81}{1.1. The machinery behind descriptors}{subsection.6.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1.2}1.2. Exploring each method of the descriptor protocol}{83}{subsection.6.1.2}}
\newlabel{chapters/6_descriptors/index:exploring-each-method-of-the-descriptor-protocol}{{6.1.2}{83}{1.2. Exploring each method of the descriptor protocol}{subsection.6.1.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{1.2.1. \_\_get\_\_(self, instance, owner)}{83}{subsubsection*.21}}
\newlabel{chapters/6_descriptors/index:get-self-instance-owner}{{6.1.2}{83}{1.2.1. \_\_get\_\_(self, instance, owner)}{subsubsection*.21}{}}
\@writefile{toc}{\contentsline {subsubsection}{1.2.2. \_\_set\_\_(self, instance, value)}{84}{subsubsection*.22}}
\newlabel{chapters/6_descriptors/index:set-self-instance-value}{{6.1.2}{84}{1.2.2. \_\_set\_\_(self, instance, value)}{subsubsection*.22}{}}
\@writefile{toc}{\contentsline {subsubsection}{1.2.3. \_\_delete\_\_(self, instance)}{85}{subsubsection*.23}}
\newlabel{chapters/6_descriptors/index:delete-self-instance}{{6.1.2}{85}{1.2.3. \_\_delete\_\_(self, instance)}{subsubsection*.23}{}}
\@writefile{toc}{\contentsline {subsubsection}{1.2.4. \_\_set\_name\_\_(self, owner, name)}{87}{subsubsection*.24}}
\newlabel{chapters/6_descriptors/index:set-name-self-owner-name}{{6.1.2}{87}{1.2.4. \_\_set\_name\_\_(self, owner, name)}{subsubsection*.24}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6.2}2. Types of descriptors}{88}{section.6.2}}
\newlabel{chapters/6_descriptors/index:types-of-descriptors}{{6.2}{88}{2. Types of descriptors}{section.6.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.1}2.1. Non\sphinxhyphen {}data descriptors}{88}{subsection.6.2.1}}
\newlabel{chapters/6_descriptors/index:non-data-descriptors}{{6.2.1}{88}{2.1. Non\sphinxhyphen {}data descriptors}{subsection.6.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.2}2.2. Data descriptors}{89}{subsection.6.2.2}}
\newlabel{chapters/6_descriptors/index:data-descriptors}{{6.2.2}{89}{2.2. Data descriptors}{subsection.6.2.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6.3}3. Descriptors in action}{91}{section.6.3}}
\newlabel{chapters/6_descriptors/index:descriptors-in-action}{{6.3}{91}{3. Descriptors in action}{section.6.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3.1}3.1. An application of descriptors}{91}{subsection.6.3.1}}
\newlabel{chapters/6_descriptors/index:an-application-of-descriptors}{{6.3.1}{91}{3.1. An application of descriptors}{subsection.6.3.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{3.1.1. A first attempt without using descriptors}{91}{subsubsection*.25}}
\newlabel{chapters/6_descriptors/index:a-first-attempt-without-using-descriptors}{{6.3.1}{91}{3.1.1. A first attempt without using descriptors}{subsubsection*.25}{}}
\@writefile{toc}{\contentsline {subsubsection}{3.1.2. The idiomatic implementation}{92}{subsubsection*.26}}
\newlabel{chapters/6_descriptors/index:the-idiomatic-implementation}{{6.3.1}{92}{3.1.2. The idiomatic implementation}{subsubsection*.26}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3.2}3.2. Different forms of implementing descriptors}{94}{subsection.6.3.2}}
\newlabel{chapters/6_descriptors/index:different-forms-of-implementing-descriptors}{{6.3.2}{94}{3.2. Different forms of implementing descriptors}{subsection.6.3.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3.3}3.2.1. The issue of global shared state}{94}{subsection.6.3.3}}
\newlabel{chapters/6_descriptors/index:the-issue-of-global-shared-state}{{6.3.3}{94}{3.2.1. The issue of global shared state}{subsection.6.3.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{3.2.2. Accessing the dictionary of the object}{95}{subsubsection*.27}}
\newlabel{chapters/6_descriptors/index:accessing-the-dictionary-of-the-object}{{6.3.3}{95}{3.2.2. Accessing the dictionary of the object}{subsubsection*.27}{}}
\@writefile{toc}{\contentsline {subsubsection}{3.2.3. Using weak references}{95}{subsubsection*.28}}
\newlabel{chapters/6_descriptors/index:using-weak-references}{{6.3.3}{95}{3.2.3. Using weak references}{subsubsection*.28}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3.4}3.3. More considerations about descriptors}{96}{subsection.6.3.4}}
\newlabel{chapters/6_descriptors/index:more-considerations-about-descriptors}{{6.3.4}{96}{3.3. More considerations about descriptors}{subsection.6.3.4}{}}
\@writefile{toc}{\contentsline {subsubsection}{3.3.1. Reusing code}{96}{subsubsection*.29}}
\newlabel{chapters/6_descriptors/index:reusing-code}{{6.3.4}{96}{3.3.1. Reusing code}{subsubsection*.29}{}}
\@writefile{toc}{\contentsline {subsubsection}{3.3.2. Avoiding class decorators}{96}{subsubsection*.30}}
\newlabel{chapters/6_descriptors/index:avoiding-class-decorators}{{6.3.4}{96}{3.3.2. Avoiding class decorators}{subsubsection*.30}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6.4}4. Analysis of descriptors}{99}{section.6.4}}
\newlabel{chapters/6_descriptors/index:analysis-of-descriptors}{{6.4}{99}{4. Analysis of descriptors}{section.6.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.4.1}4.1. How Python uses descriptors internally}{99}{subsection.6.4.1}}
\newlabel{chapters/6_descriptors/index:how-python-uses-descriptors-internally}{{6.4.1}{99}{4.1. How Python uses descriptors internally}{subsection.6.4.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{4.1.1. Functions and methods}{99}{subsubsection*.31}}
\newlabel{chapters/6_descriptors/index:functions-and-methods}{{6.4.1}{99}{4.1.1. Functions and methods}{subsubsection*.31}{}}
\@writefile{toc}{\contentsline {subsubsection}{4.1.2. Built\sphinxhyphen {}in decorators for methods}{101}{subsubsection*.32}}
\newlabel{chapters/6_descriptors/index:built-in-decorators-for-methods}{{6.4.1}{101}{4.1.2. Built\sphinxhyphen {}in decorators for methods}{subsubsection*.32}{}}
\@writefile{toc}{\contentsline {subsubsection}{4.1.3. Slots}{102}{subsubsection*.33}}
\newlabel{chapters/6_descriptors/index:slots}{{6.4.1}{102}{4.1.3. Slots}{subsubsection*.33}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.4.2}4.2. Implementing descriptors in decorators}{102}{subsection.6.4.2}}
\newlabel{chapters/6_descriptors/index:implementing-descriptors-in-decorators}{{6.4.2}{102}{4.2. Implementing descriptors in decorators}{subsection.6.4.2}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {7}Using generators}{103}{chapter.7}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapters/7_generators/index:using-generators}{{7}{103}{Using generators}{chapter.7}{}}
\newlabel{chapters/7_generators/index::doc}{{7}{103}{Using generators}{chapter.7}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7.1}1. Creating generators}{103}{section.7.1}}
\newlabel{chapters/7_generators/index:creating-generators}{{7.1}{103}{1. Creating generators}{section.7.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1.1}1.1. A first look at generators}{103}{subsection.7.1.1}}
\newlabel{chapters/7_generators/index:a-first-look-at-generators}{{7.1.1}{103}{1.1. A first look at generators}{subsection.7.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1.2}1.2. Generator expressions}{105}{subsection.7.1.2}}
\newlabel{chapters/7_generators/index:generator-expressions}{{7.1.2}{105}{1.2. Generator expressions}{subsection.7.1.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7.2}2. Iterating idiomatically}{106}{section.7.2}}
\newlabel{chapters/7_generators/index:iterating-idiomatically}{{7.2}{106}{2. Iterating idiomatically}{section.7.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2.1}2.1. Idioms for iteration}{106}{subsection.7.2.1}}
\newlabel{chapters/7_generators/index:idioms-for-iteration}{{7.2.1}{106}{2.1. Idioms for iteration}{subsection.7.2.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{2.1.1. The next() function}{107}{subsubsection*.34}}
\newlabel{chapters/7_generators/index:the-next-function}{{7.2.1}{107}{2.1.1. The next() function}{subsubsection*.34}{}}
\@writefile{toc}{\contentsline {subsubsection}{2.1.2. Using a generator}{108}{subsubsection*.35}}
\newlabel{chapters/7_generators/index:using-a-generator}{{7.2.1}{108}{2.1.2. Using a generator}{subsubsection*.35}{}}
\@writefile{toc}{\contentsline {subsubsection}{2.1.3. Itertools}{108}{subsubsection*.36}}
\newlabel{chapters/7_generators/index:itertools}{{7.2.1}{108}{2.1.3. Itertools}{subsubsection*.36}{}}
\@writefile{toc}{\contentsline {subsubsection}{2.1.4. Simplifying code through iterators}{109}{subsubsection*.37}}
\newlabel{chapters/7_generators/index:simplifying-code-through-iterators}{{7.2.1}{109}{2.1.4. Simplifying code through iterators}{subsubsection*.37}{}}
\@writefile{toc}{\contentsline {paragraph}{2.1.4.1. Repeated iterations}{109}{paragraph*.38}}
\newlabel{chapters/7_generators/index:repeated-iterations}{{7.2.1}{109}{2.1.4.1. Repeated iterations}{paragraph*.38}{}}
\@writefile{toc}{\contentsline {paragraph}{2.1.4.2. Nested loops}{109}{paragraph*.39}}
\newlabel{chapters/7_generators/index:nested-loops}{{7.2.1}{109}{2.1.4.2. Nested loops}{paragraph*.39}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2.2}2.2. The iterator pattern in Python}{110}{subsection.7.2.2}}
\newlabel{chapters/7_generators/index:the-iterator-pattern-in-python}{{7.2.2}{110}{2.2. The iterator pattern in Python}{subsection.7.2.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{2.2.1. The interface for iteration}{111}{subsubsection*.40}}
\newlabel{chapters/7_generators/index:the-interface-for-iteration}{{7.2.2}{111}{2.2.1. The interface for iteration}{subsubsection*.40}{}}
\@writefile{toc}{\contentsline {subsubsection}{2.2.2. Sequence objects as iterables}{111}{subsubsection*.41}}
\newlabel{chapters/7_generators/index:sequence-objects-as-iterables}{{7.2.2}{111}{2.2.2. Sequence objects as iterables}{subsubsection*.41}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7.3}3. Coroutines}{113}{section.7.3}}
\newlabel{chapters/7_generators/index:coroutines}{{7.3}{113}{3. Coroutines}{section.7.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3.1}3.1. The methods of the generator interface}{113}{subsection.7.3.1}}
\newlabel{chapters/7_generators/index:the-methods-of-the-generator-interface}{{7.3.1}{113}{3.1. The methods of the generator interface}{subsection.7.3.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{3.1.1. close()}{113}{subsubsection*.42}}
\newlabel{chapters/7_generators/index:close}{{7.3.1}{113}{3.1.1. close()}{subsubsection*.42}{}}
\@writefile{toc}{\contentsline {subsubsection}{3.1.2. throw(ex\_type{[}, ex\_value{[}, ex\_traceback{]}{]})}{114}{subsubsection*.43}}
\newlabel{chapters/7_generators/index:throw-ex-type-ex-value-ex-traceback}{{7.3.1}{114}{3.1.2. throw(ex\_type{[}, ex\_value{[}, ex\_traceback{]}{]})}{subsubsection*.43}{}}
\@writefile{toc}{\contentsline {subsubsection}{3.1.3. send(value)}{115}{subsubsection*.44}}
\newlabel{chapters/7_generators/index:send-value}{{7.3.1}{115}{3.1.3. send(value)}{subsubsection*.44}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3.2}3.2. More advanced coroutines}{116}{subsection.7.3.2}}
\newlabel{chapters/7_generators/index:more-advanced-coroutines}{{7.3.2}{116}{3.2. More advanced coroutines}{subsection.7.3.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{3.2.1. Returning values in coroutines}{117}{subsubsection*.45}}
\newlabel{chapters/7_generators/index:returning-values-in-coroutines}{{7.3.2}{117}{3.2.1. Returning values in coroutines}{subsubsection*.45}{}}
\@writefile{toc}{\contentsline {subsubsection}{3.2.2. Delegating into smaller coroutines: the yield from syntax}{117}{subsubsection*.46}}
\newlabel{chapters/7_generators/index:delegating-into-smaller-coroutines-the-yield-from-syntax}{{7.3.2}{117}{3.2.2. Delegating into smaller coroutines: the yield from syntax}{subsubsection*.46}{}}
\@writefile{toc}{\contentsline {paragraph}{3.2.2.1. The simplest use of yield from}{118}{paragraph*.47}}
\newlabel{chapters/7_generators/index:the-simplest-use-of-yield-from}{{7.3.2}{118}{3.2.2.1. The simplest use of yield from}{paragraph*.47}{}}
\@writefile{toc}{\contentsline {paragraph}{3.2.2.2. Capturing the value returned by a sub\sphinxhyphen {}generator}{118}{paragraph*.48}}
\newlabel{chapters/7_generators/index:capturing-the-value-returned-by-a-sub-generator}{{7.3.2}{118}{3.2.2.2. Capturing the value returned by a sub\sphinxhyphen {}generator}{paragraph*.48}{}}
\@writefile{toc}{\contentsline {paragraph}{3.2.2.3. Sending and receiving data to and from a sub\sphinxhyphen {}generator}{120}{paragraph*.49}}
\newlabel{chapters/7_generators/index:sending-and-receiving-data-to-and-from-a-sub-generator}{{7.3.2}{120}{3.2.2.3. Sending and receiving data to and from a sub\sphinxhyphen {}generator}{paragraph*.49}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7.4}4. Asynchronous programming}{121}{section.7.4}}
\newlabel{chapters/7_generators/index:asynchronous-programming}{{7.4}{121}{4. Asynchronous programming}{section.7.4}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {8}Unit testing and refactoring}{123}{chapter.8}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapters/8_unit_testing/index:unit-testing-and-refactoring}{{8}{123}{Unit testing and refactoring}{chapter.8}{}}
\newlabel{chapters/8_unit_testing/index::doc}{{8}{123}{Unit testing and refactoring}{chapter.8}{}}
\@writefile{toc}{\contentsline {section}{\numberline {8.1}1. Design principles and unit testing}{123}{section.8.1}}
\newlabel{chapters/8_unit_testing/index:design-principles-and-unit-testing}{{8.1}{123}{1. Design principles and unit testing}{section.8.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.1.1}1.1. A note about other forms of automated testing}{124}{subsection.8.1.1}}
\newlabel{chapters/8_unit_testing/index:a-note-about-other-forms-of-automated-testing}{{8.1.1}{124}{1.1. A note about other forms of automated testing}{subsection.8.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.1.2}1.2. Unit testing and agile software development}{124}{subsection.8.1.2}}
\newlabel{chapters/8_unit_testing/index:unit-testing-and-agile-software-development}{{8.1.2}{124}{1.2. Unit testing and agile software development}{subsection.8.1.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.1.3}1.3. Unit testing and software design}{125}{subsection.8.1.3}}
\newlabel{chapters/8_unit_testing/index:unit-testing-and-software-design}{{8.1.3}{125}{1.3. Unit testing and software design}{subsection.8.1.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.1.4}1.4. Defining the boundaries of what to test}{126}{subsection.8.1.4}}
\newlabel{chapters/8_unit_testing/index:defining-the-boundaries-of-what-to-test}{{8.1.4}{126}{1.4. Defining the boundaries of what to test}{subsection.8.1.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {8.2}2. Frameworks and tools for testing}{127}{section.8.2}}
\newlabel{chapters/8_unit_testing/index:frameworks-and-tools-for-testing}{{8.2}{127}{2. Frameworks and tools for testing}{section.8.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {8.3}3. Refactoring}{132}{section.8.3}}
\newlabel{chapters/8_unit_testing/index:refactoring}{{8.3}{132}{3. Refactoring}{section.8.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {8.4}4. More about unit testing}{133}{section.8.4}}
\newlabel{chapters/8_unit_testing/index:more-about-unit-testing}{{8.4}{133}{4. More about unit testing}{section.8.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {8.5}5. A brief introduction to test\sphinxhyphen {}driven development}{134}{section.8.5}}
\newlabel{chapters/8_unit_testing/index:a-brief-introduction-to-test-driven-development}{{8.5}{134}{5. A brief introduction to test\sphinxhyphen {}driven development}{section.8.5}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {9}Common design patterns}{137}{chapter.9}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapters/9_design_patterns/index:common-design-patterns}{{9}{137}{Common design patterns}{chapter.9}{}}
\newlabel{chapters/9_design_patterns/index::doc}{{9}{137}{Common design patterns}{chapter.9}{}}
\@writefile{toc}{\contentsline {section}{\numberline {9.1}1. Considerations for design patterns in Python}{137}{section.9.1}}
\newlabel{chapters/9_design_patterns/index:considerations-for-design-patterns-in-python}{{9.1}{137}{1. Considerations for design patterns in Python}{section.9.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {9.2}2. Design patterns in action}{137}{section.9.2}}
\newlabel{chapters/9_design_patterns/index:design-patterns-in-action}{{9.2}{137}{2. Design patterns in action}{section.9.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {9.3}3. The null object pattern}{137}{section.9.3}}
\newlabel{chapters/9_design_patterns/index:the-null-object-pattern}{{9.3}{137}{3. The null object pattern}{section.9.3}{}}
\@writefile{toc}{\contentsline {section}{\numberline {9.4}4. Final thoughts about design patterns}{137}{section.9.4}}
\newlabel{chapters/9_design_patterns/index:final-thoughts-about-design-patterns}{{9.4}{137}{4. Final thoughts about design patterns}{section.9.4}{}}
\@writefile{toc}{\contentsline {chapter}{\numberline {10}Clean architecture}{139}{chapter.10}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapters/10_clean_architecture/index:clean-architecture}{{10}{139}{Clean architecture}{chapter.10}{}}
\newlabel{chapters/10_clean_architecture/index::doc}{{10}{139}{Clean architecture}{chapter.10}{}}
\@writefile{toc}{\contentsline {section}{\numberline {10.1}1. From clean code to clean architecture}{139}{section.10.1}}
\newlabel{chapters/10_clean_architecture/index:from-clean-code-to-clean-architecture}{{10.1}{139}{1. From clean code to clean architecture}{section.10.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {10.2}2. Software components}{139}{section.10.2}}
\newlabel{chapters/10_clean_architecture/index:software-components}{{10.2}{139}{2. Software components}{section.10.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {10.3}3. Use case}{139}{section.10.3}}
\newlabel{chapters/10_clean_architecture/index:use-case}{{10.3}{139}{3. Use case}{section.10.3}{}}
